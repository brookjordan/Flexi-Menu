{"version":3,"sources":["../../../src/js/MU_system/app.js","../../../src/js/MU_system/services/muMain.js","../../../src/js/MU_system/services/muContent.js"],"names":[],"mappings":"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","file":"MU_system.js","sourcesContent":["var MU_System = angular.module('MU', []);","MU_System.factory('muMenus', [ '$rootScope', '$timeout',\n\tfunction( $rootScope, $timeout ) {\n\n\n\t/*\n\t *\tAdd a new menu\n\t */\n\tfunction addMenu ( menuID, options ) {\n\t\tvar o = options || {},\n\n\t\t\tvisible = typeof o.visible === 'boolean' ?\n\t\t\t\to.visible :\n\t\t\t\ttrue,\n\t\t\tstate = o.state || 'open',\n\n\t\t\t//\tTODO: Remove when muContent has a better way of getting sizes\n\t\t\tsizeOpen = o.sizeOpen || 50,\n\t\t\tsizeClosed = o.sizeClosed || 10;\n\t\t\t//\tENDTODO: Remove when muContent has a better way of getting sizes\n\n\n\t\tmenus.items[ menuID ] = {\n\t\t\tvisible: visible,\n\t\t\tstate: state,\n\t\t\tchildren: {},\n\n\t\t\t//\tTODO: Remove when muContent has a better way of getting sizes\n\t\t\tstyles: {\n\t\t\t\topen: sizeOpen,\n\t\t\t\tclosed: sizeClosed\n\t\t\t}\n\t\t\t//\tENDTODO: Remove when muContent has a better way of getting sizes\n\t\t};\n\t\tmenus.order.push( menuID );\n\n\n\t\tsetAllOrders();\n\n\t\t$rootScope.$broadcast( 'MU_menuAdded', { menuID: menuID } );\n\n\n\t\treturn muSystem;\n\t}\n\n\n\n\n\n\t/*\n\t *\tMenu ordering\n\t */\n\tfunction setOrder ( menuID ) {\n\t\tvar oldOrder\t= angular.copy( menus.order ),\n\t\t\tthisMenu    = menus.items[ menuID ],\n\t\t\torder       = orderOf( menuID );\n\n\t\tthisMenu.order = order;\n\n\t\t$rootScope.$broadcast( 'MU_menuReordered', { menuID: menuID, oldOrder: oldOrder, newOrder: menus.order } );\n\n\t\treturn muSystem;\n\t}\n\n\tfunction setAllOrders () {\n\t\tvar i;\n\n\t\tfor ( i in menus.items ) {\n\t\t\tsetOrder( i );\n\t\t}\n\n\t\treturn muSystem;\n\t}\n\n\tfunction orderOf ( menuID ) {\n\t\tvar order = 4 - menus.order.indexOf( menuID );\n\n\t\treturn order;\n\t}\n\n\tfunction reorderMenus ( requestedOrder ) {\n\t\tvar ro,\n\t\t\tnewOrder = [],\n\n\t\t\titem,\n\t\t\ti = 0;\n\n\t\tif ( typeof requestedOrder === 'undefined' ) {\n\t\t\tro = [];\n\t\t} else if ( typeof requestedOrder === 'string' ) {\n\t\t\tro = requestedOrder.split(' ');\n\t\t} else {\n\t\t\tro = requestedOrder;\n\t\t}\n\n\t\tfor (; i < ro.length; i+=1 ) {\n\t\t\titem = ro[i];\n\n\t\t\tif ( menus.order.indexOf( item ) > -1 ) {\n\t\t\t\tnewOrder.push( item );\n\t\t\t}\n\t\t}\n\n\t\tif ( newOrder.length !== menus.order.length ) {\n\t\t\tfor ( i=0; i<menus.order.length; i+=1 ) {\n\t\t\t\titem = menus.order[i];\n\n\t\t\t\tif ( newOrder.indexOf( item ) === -1 ) {\n\t\t\t\t\tnewOrder.push( item );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmenus.order = newOrder;\n\n\t\tsetAllOrders();\n\n\t\treturn muSystem;\n\t}\n\n\tfunction menuIndex ( reference ) {\n\t\tif ( typeof reference === 'number' ) {\n\t\t\treturn reference;\n\t\t} else {\n\t\t\treturn menus.order.indexof( reference );\n\t\t}\n\t}\n\n\n\n\n\n\t/*\n\t *\tVisibility\n\t */\n\tfunction toggleVisibility ( menuID, to, ignoreLinks ) {\n\t\tif ( typeof to === 'boolean' ) {\n\t\t\tmenus.items[ menuID ].visible = to;\n\t\t} else {\n\t\t\tmenus.items[ menuID ].visible = !menus.items[ menuID ].visible;\n\t\t}\n\n\t\tif ( !ignoreLinks ) {\n\t\t\thandleLinks( menuID )\n\t\t}\n\t\tsetAllOrders();\n\n\t\t$rootScope.$broadcast( 'MU_visibilityToggled', { menuID: menuID });\n\n\t\treturn muSystem;\n\t}\n\n\tfunction isVisible ( menuID ) {\n\t\treturn menus.items[ menuID ].visible;\n\t}\n\n\n\n\n\n\t/*\n\t *\tState manipulation\n\t */\n\tfunction toggleState ( menuID, to, ignoreLinks ) {\n\t\tvar thisMenu = menus.items[ menuID ];\n\n\t\tif ( typeof to === 'string' ) {\n\t\t\tthisMenu.state = to;\n\t\t} else {\n\t\t\tthisMenu.state = thisMenu.state === 'open' ?\n\t\t\t\t'closed' :\n\t\t\t\t'open';\n\t\t}\n\n\t\tif ( !ignoreLinks ) {\n\t\t\thandleLinks( menuID );\n\t\t}\n\t\tsetAllOrders();\n\n\t\t$rootScope.$broadcast( 'MU_stateToggled', { menuID: menuID, newState: thisMenu.state} );\n\n\t\treturn muSystem;\n\t}\n\n\tfunction stateOf ( menuID ) {\n\t\treturn menus.items[ menuID ].state;\n\t}\n\n\tfunction isOfState ( menuID, state ) {\n\t\treturn stateOf( menuID ) === state;\n\t}\n\n\n\n\n\n\t/*\n\t *\tState Linking\n\t */\n\tfunction linkMenus ( which, how, options ) {\n\t\tvar o     = options || {},\n\t\t\tlinksMenus = typeof which === 'string' ?\n\t\t\t\twhich.split(' ') :\n\t\t\t\twhich;\n\n\t\tlinks.push({\n\t\t\tmenus: linksMenus,\n\t\t\thow:   how\n\t\t});\n\n\t\thandleLink ( how, linksMenus[0], linksMenus[1] );\n\n\t\treturn muSystem;\n\t}\n\n\tfunction unlinkMenus ( which, how ) {\n\t\tvar i     = 0,\n\t\t\tthisLink,\n\n\t\t\tlinkAIndex,\n\t\t\tlinkBIndex,\n\n\t\t\tmenuIDs;\n\n\n\t\tif ( !which ) {\n\t\t\tlinks = [];\n\t\t\treturn muSystem;\n\t\t} else if ( typeof which === 'string' ) {\n\t\t\tmenuIDs = which.split(' ');\n\t\t} else {\n\t\t\tmenuIDs = which;\n\t\t}\n\n\n\t\tfor (; i < links.length; i+=1 ) {\n\t\t\tthisLink = links[i];\n\t\t\tlinkAIndex = thisLink.menuIDs.indexOf( menuIDs[0] );\n\t\t\tlinkBIndex = thisLink.menuIDs.indexOf( menuIDs[1] );\n\n\t\t\tif (\tlinkAIndex !== -1 &&\n\t\t\t\t\tlinkBIndex !== -1 &&\n\t\t\t\t\tlinkAIndex !== linkBIndex &&\n\t\t\t\t\t!how || how === thisLink.how ) {\n\t\t\t\tlinks.splice( i, 1 );\n\t\t\t}\n\n\t\t}\n\n\t\treturn muSystem;\n\t}\n\n\tfunction handleLinks ( menuID ) {\n\t\tvar i = 0,\n\t\t\tthisLink,\n\t\t\tthisMenuLinkIndex,\n\t\t\totherMenuLinkIndex,\n\t\t\tothermenuID,\n\n\t\t\tthisMenu = menus.items[menuID],\n\t\t\totherMenu;\n\n\t\tfor (; i<links.length; i+=1) {\n\t\t\tthisLink           = links[i];\n\t\t\tthisMenuLinkIndex  = thisLink.menus.indexOf( menuID );\n\n\t\t\tif ( thisMenuLinkIndex > -1 ) {\n\t\t\t\totherMenuLinkIndex = 1-thisMenuLinkIndex;\n\t\t\t\tothermenuID      = thisLink.menus[ 1-thisMenuLinkIndex ];\n\n\t\t\t\thandleLink ( thisLink.how, menuID, othermenuID );\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleLink ( how, A, B ) {\n\t\tswitch ( how ) {\n\t\t\tcase 'one open':\n\t\t\t\thandleLink_oneOpen( A, B );\n\t\t\t\tbreak;\n\n\t\t\tcase 'one closed':\n\t\t\t\thandleLink_oneClosed( A, B );\n\t\t\t\tbreak;\n\n\t\t\tcase 'one visible':\n\t\t\t\thandleLink_oneVisible( A, B );\n\t\t\t\tbreak;\n\n\t\t\tcase 'one hidden':\n\t\t\t\thandleLink_oneHidden( A, B );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tfunction handleLink_oneOpen ( A, B ) {\n\t\tvar thisMenu = menus.items[A],\n\t\t\totherMenu = menus.items[B];\n\n\t\tif ( thisMenu.state === 'open' ) {\n\t\t\ttoggleState( B, 'closed', true );\n\t\t}\n\t}\n\tfunction handleLink_oneClosed ( A, B ) {\n\t\tvar thisMenu = menus.items[A],\n\t\t\totherMenu = menus.items[B];\n\n\t\tif ( thisMenu.state === 'closed' ) {\n\t\t\ttoggleState( B, 'open', true );\n\t\t}\n\t}\n\tfunction handleLink_oneVisible ( A, B ) {\n\t\tvar thisMenu = menus.items[A],\n\t\t\totherMenu = menus.items[B];\n\n\t\tif ( thisMenu.visible ) {\n\t\t\ttoggleVisibility( B, false, true );\n\t\t}\n\t}\n\tfunction handleLink_oneHidden ( A, B ) {\n\t\tvar thisMenu = menus.items[A],\n\t\t\totherMenu = menus.items[B];\n\n\t\tif ( !thisMenu.visible ) {\n\t\t\ttoggleVisibility( B, true, true );\n\t\t}\n\t}\n\n\n\n\n\n\n\t/*\n\t *\tMenu system function\n\t *\tMay well stay empty, but allows it to be a function in future\n\t */\n\tfunction muSystem () {\n\t\treturn menus;\n\t}\n\n\tvar menus = {\n\t\t\titems: {},\n\t\t\torder: []\n\t\t},\n\t\tlinks = [];\n\n\n\n\n\n\n\tmuSystem.add              =   addMenu;\n\tmuSystem.link             =   linkMenus;\n\tmuSystem.unlink           =   unlinkMenus;\n\tmuSystem.reorder          =   reorderMenus;\n\n\tmuSystem.toggleState      =   toggleState;\n\tmuSystem.toggleVisibility =   toggleVisibility;\n\n\tmuSystem.setOrder         =   setOrder;\n\n\tmuSystem.isVisible        =   isVisible;\n\tmuSystem.is               =   isOfState;\n\tmuSystem.state            =   stateOf;\n\tmuSystem.menus            =   menus.items;\n\tmuSystem.menusBase        =   menus;\n\n\treturn muSystem;\n}]);","//\tAny controller containing this service should have this line of code:\n//\t\t$scope.$on( 'MU_windowResized', function() { $scope.$apply(); });\n\nMU_System.factory('muContent', [ '$window', '$rootScope', '$timeout', 'muMenus',\n\tfunction( $window, $rootScope, $timeout, muMenus ) {\n\n\t/*\n\t *\tBox Sizes\n\t */\n\tfunction setSystemMetrics () {\n\t\tvar offsetLeft    = getSize('left'),\n\t\t\toffsetRight   = getSize('right'),\n\t\t\toffsetTop     = getSize('top'),\n\t\t\toffsetBottom  = getSize('bottom');\n\n\t\tif ( offsetLeft + offsetRight > muContent.containerWidth ) {\n\t\t\tif ( offsetLeft > muContent.containerWidth ) {\n\t\t\t\toffsetRight = 0;\n\t\t\t\toffsetLeft = muContent.containerWidth;\n\t\t\t} else {\n\t\t\t\toffsetRight = muContent.containerWidth - offsetLeft;\n\t\t\t}\n\t\t}\n\n\t\tsystemMetrics = {\n\t\t\ttop:     offsetTop,\n\t\t\tright:   offsetRight,\n\t\t\tbottom:  offsetBottom,\n\t\t\tleft:    offsetLeft,\n\t\t\torder:   0\n\t\t};\n\t}\n\n\tfunction getSize ( menuID ) {\n\t\tvar size;\n\n\t\tif ( menus.items[ menuID ] && menus.items[ menuID ].visible ) {\n\t\t\tsize = menus.items[ menuID ].styles[ menus.items[ menuID ].state ];\n\t\t} else {\n\t\t\tsize = 0;\n\t\t}\n\n\t\treturn size;\n\t}\n\n\tfunction getOpenSize ( menuID ) {\n\t\tvar size;\n\n\t\tsize = menus.items[ menuID ].styles.open;\n\n\t\treturn size;\n\t}\n\n\n\n\n\n\t/*\n\t *\tElement queries\n\t */\n\tfunction resizeHandler () {\n\t\tvar resizeIntervalLimit = 16,\n\t\t\ttimeNow = +new Date();\n\n\n\t\tif ( timeNow - lastResize > resizeIntervalLimit ){\n\n\t\t\trunResize();\n\n\t\t} else {\n\n\t\t\tif ( delayBroadcastResize ) {\n\t\t\t\t$timeout.cancel(delayBroadcastResize);\n\t\t\t}\n\t\t\tdelayBroadcastResize = $timeout(function() {\n\t\t\t\trunResize();\n\t\t\t\tdelayBroadcastResize = false;\n\t\t\t}, resizeIntervalLimit - (timeNow - lastResize));\n\n\t\t}\n\t}\n\tfunction runResize () {\n\t\tfindContentSize();\n\t\tsetQueryStrings();\n\t\t$rootScope.$broadcast( 'MU_windowResized' );\n\n\n\t\tlastResize = +new Date();\n\t}\n\n\tfunction findContentSize () {\n\t\tvar MUContiner = document.getElementById('MU').parentNode,\n\t\t\tcontainerWidth =\n\t\t\t\tMUContiner.getBoundingClientRect().right -\n\t\t\t\tMUContiner.getBoundingClientRect().left,\n\t\t\tcontainerHeight =\n\t\t\t\tMUContiner.getBoundingClientRect().bottom -\n\t\t\t\tMUContiner.getBoundingClientRect().top,\n\t\t\tcontentWidth =\n\t\t\t\tcontainerWidth -\n\t\t\t\tgetSize( 'left' ) -\n\t\t\t\tgetSize( 'right' ),\n\t\t\tcontentHeight =\n\t\t\t\tcontainerHeight -\n\t\t\t\tgetSize( 'top' ) -\n\t\t\t\tgetSize( 'bottom' );\n\n\t\tmuContent.containerWidth = containerWidth;\n\t\tmuContent.contentWidth = contentWidth;\n\n\t\tmuContent.containerHeight = containerHeight;\n\t\tmuContent.contentHeight = contentHeight;\n\n\t\treturn contentWidth;\n\t}\n\n\tfunction addQuery ( options ) {\n\t\tvar i = 1, j;\n\t\tvar\targs = arguments;\n\t\tvar\targ;\n\t\tvar\tqueries, query;\n\t\tvar\to = options || {};\n\t\tvar\tdir = typeof o === 'string' ?\n\t\t\t\to :\n\t\t\t\to.dir || 'w';\n\t\tvar\tcontext = o.context || 'content';\n\t\tvar\tcallback = o.callback || undefined;\n\n\n\t\tfor (; i<args.length; i+=1 ) {\n\t\t\targ = args[i];\n\n\t\t\tswitch ( typeof arg ) {\n\t\t\t\tcase 'string':\n\t\t\t\tcase 'number':\n\t\t\t\t\tqueries = ( '' + arg ).split( ' ' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tqueries = arg;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor ( j=0; j<queries.length; j+=1 ) {\n\t\t\t\tquery = queries[j];\n\n\t\t\t\tif ( context === 'content' ) {\n\n\t\t\t\t\tcontentQueries[ dir ].push( +query );\n\n\t\t\t\t} else if ( context === 'container' ) {\n\t\t\t\t\tcontainerQueryCallbacks[ query ] = containerQueryCallbacks[ query ] || [];\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tcontainerQueryCallbacks[ query ].push( callback );\n\t\t\t\t\t}\n\t\t\t\t\tcontainerQueries[ dir ].push( +query );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\tSort the relevant queries array\n\t\tif ( context === 'content' ) {\n\t\t\tcontentQueries[ dir ].sort(sortNumber);\n\t\t} else if ( context === 'content' ) {\n\t\t\tcontainerQueries[ dir ].sort(sortNumber);\n\t\t}\n\n\t\tsetQueryStrings();\n\n\t\t$rootScope.$broadcast( 'MU_windowResized' );\n\n\t\treturn muContent;\n\t}\n\n\tfunction setQueryStrings () {\n\t\tsetContentQueryString();\n\t\tsetContainerQueryString();\n\t}\n\n\tfunction setContentQueryString () {\n\t\tvar greaterThan = '',\n\t\t\ti = 0,\n\t\t\tquery, prevQuery;\n\n\t\tfor (; i < contentQueries.w.length; i+=1 ) {\n\t\t\tquery = contentQueries.w[i];\n\n\t\t\tif ( query > muContent.contentWidth ) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tgreaterThan += ' content-minWidth' + query;\n\t\t\t}\n\t\t}\n\n\t\tmuContent.contentClass = greaterThan;\n\t}\n\n\tfunction setContainerQueryString () {\n\t\tvar greaterThan = '',\n\t\t\ti = 0,\n\t\t\tquery, prevQuery;\n\n\n\t\tfor (; i < containerQueries.w.length; i+=1 ) {\n\t\t\tquery = containerQueries.w[i];\n\n\t\t\tif ( query > muContent.containerWidth ) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tgreaterThan += ' container-minWidth' + query;\n\t\t\t}\n\n\t\t\tprevQuery = query;\n\t\t}\n\n\t\tmuContent.containerClass = greaterThan;\n\n\t\tif ( prevQuery ) {\n\t\t\trunContainerQueryCallbacks( prevQuery );\n\t\t}\n\t}\n\n\tfunction runContainerQueryCallbacks ( querySize ) {\n\t\tvar i = 0,\n\t\t\tcallbacks = containerQueryCallbacks[ querySize ],\n\t\t\tcallback;\n\n\t\tif ( callbacks ) {\n\t\t\tfor (; i<callbacks.length; i+=1 ) {\n\t\t\t\tcallback = callbacks[i];\n\n\t\t\t\tcallback( querySize );\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runContentQueryCallbacks ( querySize ) {\n\t\tvar i = 0,\n\t\t\tcallbacks = contentQueryCallbacks[ querySize ],\n\t\t\tcallback;\n\n\t\tif ( callbacks ) {\n\t\t\tfor (; i<callbacks.length; i+=1 ) {\n\t\t\t\tcallback = callbacks[i];\n\n\t\t\t\tcallback( querySize );\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/*\n\t *\tArray sorying numerically\n\t */\n\tfunction sortNumber ( a, b ) {\n\t\treturn a - b;\n\t}\n\n\tfunction muContent () {}\n\n\tvar systemMetrics = {};\n\tvar\tmenus = muMenus.menusBase;\n\tvar\tcontentQueries = {\n\t\t\tw: [],\n\t\t\th: []\n\t\t};\n\tvar\tcontainerQueries = {\n\t\t\tw: [],\n\t\t\th: []\n\t\t};\n\tvar\tcontainerQueryCallbacks = {};\n\tvar\tdelayBroadcastResize = false;\n\tvar\tlastResize = +new Date();\n\n\n\n\tangular.element($window).bind('resize', resizeHandler );\n\t$rootScope.$on( 'MU_menuAdded', function() {\n\t\tfindContentSize();\n\t});\n\t$rootScope.$on( 'MU_visibilityToggled', function() {\n\t\tsetSystemMetrics();\n\t\tfindContentSize();\n\t});\n\t$rootScope.$on( 'MU_stateToggled', function() {\n\t\tsetSystemMetrics();\n\t\tfindContentSize();\n\t});\n\n\n\n\n\n\tfindContentSize();\n\tmuContent.addQuery = addQuery;\n\tmuContent.metrics = function () {\n\t\treturn systemMetrics;\n\t};\n\tmuContent.contentClass = '';\n\tmuContent.containerClass = '';\n\n\tmuContent.containerWidth = 0;\n\tmuContent.contentWidth = 0;\n\n\tmuContent.containerHeight = 0;\n\tmuContent.contentHeight = 0;\n\n\n\n\n\n\treturn muContent;\n\n}]);"]}